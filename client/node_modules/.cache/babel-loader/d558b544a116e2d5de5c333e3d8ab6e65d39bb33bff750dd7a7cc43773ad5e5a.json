{"ast":null,"code":"var _jsxFileName = \"/Users/kb/Documents/MusicApp/client/src/components/Auth/Login/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { MDBBtn, MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBInput, MDBSpinner } from \"mdb-react-ui-kit\";\nimport axios from \"axios\";\nimport { API_BASE_URL } from \"../../../config\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useSnackbar } from \"notistack\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [isLoading, setIsLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleInputUpdate = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const loginUser = async () => {\n    //Login User\n    try {\n      setIsLoading(true);\n      const data = {\n        email: formData.email,\n        password: formData.password\n      };\n      const res = await axios.post(`${API_BASE_URL}/auth/login`, data);\n      if (res.status === 200) {\n        var _res$data;\n        enqueueSnackbar(\"User logged in successfully\", {\n          variant: \"success\"\n        });\n        localStorage.setItem(\"token\", res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.token);\n        navigate(\"/\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      if (error !== null && error !== void 0 && (_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.message) enqueueSnackbar(error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message, {\n        variant: \"error\"\n      });\n      console.log(\"Error\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    fluid: true,\n    className: \"login-body\",\n    children: /*#__PURE__*/_jsxDEV(MDBRow, {\n      className: \"d-flex justify-content-center align-items-center h-100\",\n      children: /*#__PURE__*/_jsxDEV(MDBCol, {\n        col: \"12\",\n        children: /*#__PURE__*/_jsxDEV(MDBCard, {\n          className: \"bg-dark text-white my-5 mx-auto\",\n          style: {\n            borderRadius: \"1rem\",\n            maxWidth: \"400px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n            className: \"p-5 d-flex flex-column align-items-center mx-auto w-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"fw-bold mb-2 text-uppercase\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-white-50 mb-5\",\n              children: \"Please enter your login and password!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n              wrapperClass: \"mb-4 mx-5 w-100\",\n              labelClass: \"text-white\",\n              label: \"Email address\",\n              name: \"email\",\n              onChange: e => handleInputUpdate(e),\n              id: \"formControlLg\",\n              className: \"form-input\",\n              type: \"email\",\n              size: \"lg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n              wrapperClass: \"mb-4 mx-5 w-100\",\n              labelClass: \"text-white\",\n              label: \"Password\",\n              name: \"password\",\n              id: \"formControlLg\",\n              className: \"form-input\",\n              type: \"password\",\n              onChange: e => handleInputUpdate(e),\n              size: \"lg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n              outline: true,\n              className: \"mx-2 px-5\",\n              color: \"white\",\n              size: \"lg\",\n              onClick: loginUser,\n              children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(MDBSpinner, {\n                  size: \"sm\",\n                  role: \"status\",\n                  tag: \"span\",\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this), \"Loading...\"]\n              }, void 0, true) : \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-0 my-4\",\n                children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/register\",\n                  className: \"text-white-50 fw-bold\",\n                  children: \"Sign Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"qcFewdJkJcGgOqljiCK05w7Gbos=\", false, function () {\n  return [useNavigate, useSnackbar];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","MDBBtn","MDBContainer","MDBRow","MDBCol","MDBCard","MDBCardBody","MDBInput","MDBSpinner","axios","API_BASE_URL","Link","useNavigate","useSnackbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","navigate","enqueueSnackbar","isLoading","setIsLoading","formData","setFormData","email","password","handleInputUpdate","e","name","target","value","prev","loginUser","data","res","post","status","_res$data","variant","localStorage","setItem","token","error","_error$response","_error$response$data","_error$response2","_error$response2$data","response","message","console","log","fluid","className","children","col","style","borderRadius","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","wrapperClass","labelClass","label","onChange","id","type","size","outline","color","onClick","role","tag","to","_c","$RefreshReg$"],"sources":["/Users/kb/Documents/MusicApp/client/src/components/Auth/Login/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  MDBBtn,\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBCard,\n  MDBCardBody,\n  MDBInput,\n  MDBSpinner,\n \n} from \"mdb-react-ui-kit\";\nimport axios from \"axios\";\nimport { API_BASE_URL } from \"../../../config\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useSnackbar } from \"notistack\";\nimport \"./Login.css\";\n\nfunction Login() {\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n  const [isLoading, setIsLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleInputUpdate = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const loginUser = async () => {\n    //Login User\n    try {\n      setIsLoading(true);\n      const data = {\n        email: formData.email,\n        password: formData.password,\n      };\n      const res = await axios.post(`${API_BASE_URL}/auth/login`, data);\n\n      if (res.status === 200) {\n        enqueueSnackbar(\"User logged in successfully\", { variant: \"success\" });\n        localStorage.setItem(\"token\", res?.data?.token);\n        navigate(\"/\");\n      }\n    } catch (error) {\n      if (error?.response?.data?.message)\n        enqueueSnackbar(error?.response?.data?.message, { variant: \"error\" });\n\n      console.log(\"Error\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return (\n    <MDBContainer fluid className=\"login-body\">\n      <MDBRow className=\"d-flex justify-content-center align-items-center h-100\">\n        <MDBCol col=\"12\">\n          <MDBCard\n            className=\"bg-dark text-white my-5 mx-auto\"\n            style={{ borderRadius: \"1rem\", maxWidth: \"400px\" }}\n          >\n            <MDBCardBody className=\"p-5 d-flex flex-column align-items-center mx-auto w-100\">\n              <h2 className=\"fw-bold mb-2 text-uppercase\">Login</h2>\n              <p className=\"text-white-50 mb-5\">\n                Please enter your login and password!\n              </p>\n\n              <MDBInput\n                wrapperClass=\"mb-4 mx-5 w-100\"\n                labelClass=\"text-white\"\n                label=\"Email address\"\n                name=\"email\"\n                onChange={(e) => handleInputUpdate(e)}\n                id=\"formControlLg\"\n                className=\"form-input\"\n                type=\"email\"\n                size=\"lg\"\n              />\n              <MDBInput\n                wrapperClass=\"mb-4 mx-5 w-100\"\n                labelClass=\"text-white\"\n                label=\"Password\"\n                name=\"password\"\n                id=\"formControlLg\"\n                className=\"form-input\"\n                type=\"password\"\n                onChange={(e) => handleInputUpdate(e)}\n                size=\"lg\"\n              />\n              <MDBBtn\n                outline\n                className=\"mx-2 px-5\"\n                color=\"white\"\n                size=\"lg\"\n                onClick={loginUser}\n              >\n                 {isLoading ? (\n                  <>\n                    <MDBSpinner\n                      size=\"sm\"\n                      role=\"status\"\n                      tag=\"span\"\n                      className=\"me-2\"\n                    />\n                    Loading...\n                  </>\n                ) : (\n                  \"Login\"\n                )}\n              </MDBBtn>\n\n              <div>\n                <p className=\"mb-0 my-4\">\n                  Don't have an account?{\" \"}\n                  <Link to=\"/register\" className=\"text-white-50 fw-bold\">\n                    Sign Up\n                  </Link>\n                </p>\n              </div>\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}