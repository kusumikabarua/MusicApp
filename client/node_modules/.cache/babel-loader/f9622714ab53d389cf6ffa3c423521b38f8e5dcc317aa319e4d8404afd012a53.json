{"ast":null,"code":"var _jsxFileName = \"/Users/kb/Documents/MusicApp/client/src/components/Player/Main.jsx\",\n  _s = $RefreshSig$();\n// FileName: App.js\nimport { useRef, useState } from \"react\";\nimport Player from \"./PlayerSong\";\nimport Song from \"./Song\";\nimport \"./app.scss\";\n\n// Importing DATA\nimport data from \"./data\";\nimport Library from \"./Library\";\nimport Nav from \"./Navb\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main({\n  songsFromDB\n}) {\n  _s();\n  console.log(songsFromDB);\n  const [songs, setSongs] = useState(songsFromDB);\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const audioRef = useRef(null);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0\n  });\n  const timeUpdateHandler = e => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //calculating percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round(roundedCurrent / roundedDuration * 100);\n    console.log();\n    setSongInfo({\n      currentTime: current,\n      duration,\n      animationPercentage: animation\n    });\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex(song => song._id === currentSong._id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      libraryStatus: libraryStatus,\n      setLibraryStatus: setLibraryStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Song, {\n      currentSong: currentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      id: songs._id,\n      songs: songs,\n      songInfo: songInfo,\n      setSongInfo: setSongInfo,\n      audioRef: audioRef,\n      isPlaying: isPlaying,\n      setIsPlaying: setIsPlaying,\n      currentSong: currentSong,\n      setCurrentSong: setCurrentSong,\n      setSongs: setSongs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Library, {\n      libraryStatus: libraryStatus,\n      setLibraryStatus: setLibraryStatus,\n      setSongs: setSongs,\n      isPlaying: isPlaying,\n      audioRef: audioRef,\n      songs: songs,\n      setCurrentSong: setCurrentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onLoadedMetadata: timeUpdateHandler,\n      onTimeUpdate: timeUpdateHandler,\n      src: currentSong.songUrl,\n      ref: audioRef,\n      onEnded: songEndHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"JWkihfsyuyMhUGQxCD/7jgNxULM=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useRef","useState","Player","Song","data","Library","Nav","jsxDEV","_jsxDEV","Main","songsFromDB","_s","console","log","songs","setSongs","currentSong","setCurrentSong","isPlaying","setIsPlaying","libraryStatus","setLibraryStatus","audioRef","songInfo","setSongInfo","currentTime","duration","animationPercentage","timeUpdateHandler","e","current","target","roundedCurrent","Math","round","roundedDuration","animation","songEndHandler","currentIndex","findIndex","song","_id","length","play","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onLoadedMetadata","onTimeUpdate","src","songUrl","ref","onEnded","_c","$RefreshReg$"],"sources":["/Users/kb/Documents/MusicApp/client/src/components/Player/Main.jsx"],"sourcesContent":["// FileName: App.js\nimport { useRef, useState } from \"react\";\nimport Player from \"./PlayerSong\";\nimport Song from \"./Song\";\nimport \"./app.scss\";\n\n// Importing DATA\nimport data from \"./data\";\nimport Library from \"./Library\";\nimport Nav from \"./Navb\";\nfunction Main({songsFromDB}) {\n  console.log(songsFromDB);\n  const [songs, setSongs] = useState(songsFromDB);\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const audioRef = useRef(null);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //calculating percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n    console.log();\n    setSongInfo({\n      currentTime: current,\n      duration,\n      animationPercentage: animation,\n    });\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song._id === currentSong._id);\n\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n\n    if (isPlaying) audioRef.current.play();\n  };\n  return (\n    <div>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        id={songs._id}\n        songs={songs}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        libraryStatus={libraryStatus}\n        setLibraryStatus={setLibraryStatus}\n        setSongs={setSongs}\n        isPlaying={isPlaying}\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n      />\n      <audio\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        src={currentSong.songUrl}\n        ref={audioRef}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );  \n}\n\nexport default Main;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}